<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="co.com.choucair.certification.testweb.runners.h1" tests="0" skipped="0" failures="0" errors="0" timestamp="1970-01-01T00:00:00" hostname="MacBook-Air-de-Christian.local" time="0.0">
  <properties/>
  <system-out><![CDATA[
3 Scenarios (?[33m3 undefined?[0m)
15 Steps (?[33m12 undefined?[0m, ?[32m3 passed?[0m)
0m48,923s


You can implement missing steps with the snippets below:

@When("^enter to flight status option$")
public void enterToFlightStatusOption() {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}


@When("^the flight status elements are reviewed$")
public void theFlightStatusElementsAreReviewed() {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@When("^enter reserve flight option$")
public void enterReserveFlightOption() {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@When("^the reserve flight elements are reviewed$")
public void theReserveFlightElementsAreReviewed() {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@Then("^the smock test passed$")
public void theSmockTestPassed() {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@When("^the user enter to flight status$")
public void theUserEnterToFlightStatus() {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@When("^the user enter the origin, destination and date of flight$")
public void theUserEnterTheOriginDestinationAndDateOfFlight(DataTable arg1) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // List<YourType>, List<List<E>>, List<Map<K,V>> or Map<K,V>.
    // E,K,V must be a scalar (String, Integer, Date, enum etc).
    // Field names for YourType must match the column names in 
    // your feature file (except for spaces and capitalization).
    throw new PendingException();
}

@Then("^the user will watch the state confirmed CONFIRMADO$")
public void theUserWillWatchTheStateConfirmedCONFIRMADO() {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@When("^the user click on radio button flight number$")
public void theUserClickOnRadioButtonFlightNumber() {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@When("^copy the flight number for file txt with the date (\\d+) noviembre$")
public void copyTheFlightNumberForFileTxtWithTheDateNoviembre(int arg1) {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

]]></system-out>
  <system-err><![CDATA[SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
]]></system-err>
</testsuite>
